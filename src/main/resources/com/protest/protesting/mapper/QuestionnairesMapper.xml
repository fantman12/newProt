<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.protest.protesting.mapper.QuestionnairesMapper">
    <resultMap id="QuestionMap" type="com.protest.protesting.entity.QuestionnairesEntity">
        <id property="seq" column="seq"/>
        <id property="question" column="question"/>
<!--        <id property="subQuestion" column="sub_question"/>-->
<!--        <id property="isVisibled" column="is_visibled"/>-->
<!--        <id property="orderedBy" column="ordered_by"/>-->
<!--        <id property="createdAt" column="created_at"/>-->
<!--        <id property="updatedAt" column="updated_at"/>-->
<!--        <id property="isDeleted" column="is_deleted"/>-->

    </resultMap>
    <select id="selectQuestion" parameterType="String" resultType="QuestionnairesEntity">
        SELECT * FROM QUESTIONNAIRES
        WHERE is_deleted = 0

        ORDER BY `ordered_by` ASC
        <choose>
            <when test='limit != null and offset != null'>
                LIMIT ${limit} OFFSET ${offset}
            </when>
            <otherwise>
                LIMIT 20 OFFSET 0
            </otherwise>
        </choose>

    </select>

    <select id="questionVisibleCnt" resultType="int">
        SELECT COUNT(*) as count FROM QUESTIONNAIRES
        WHERE is_deleted = 0
        AND is_visibled = 1
    </select>

    <select id="questionUsingCnt" resultType="int">
        SELECT COUNT(*) as count FROM QUESTIONNAIRES
        WHERE is_deleted = 0
    </select>

    <select id="questionMaxOrderBy" resultType="int">
        SELECT max(ordered_by) as ordered FROM QUESTIONNAIRES
        WHERE is_deleted = 0
    </select>

    <select id="questionVisible" resultType="QuestionnairesEntity">
        SELECT * FROM QUESTIONNAIRES
        WHERE is_deleted = 0
        AND is_visibled = 1
    </select>

    <select id="questionPassInfo" parameterType="String" resultType="QuestionPassEntity">
        SELECT
        DATE(v.visited_at) AS visited_at,
        (SELECT COUNT(*) FROM VISITORS
        WHERE is_passed = 1 AND DATE(visited_at) = DATE(v.visited_at)) AS passCnt,
        (SELECT COUNT(*) FROM VISITORS
        WHERE is_passed = 0 AND DATE(visited_at) = DATE(v.visited_at)) AS unPassCnt
        FROM VISITORS v
        <if test="startDate != null and endDate != null">
            <![CDATA[WHERE v.visited_at >= #{startDate} AND v.visited_at <= #{endDate}]]>
        </if>

        GROUP BY DATE(v.visited_at)
        ORDER BY v.visited_at DESC

        <choose>
            <when test='limit != null and offset != null'>
                LIMIT ${limit} OFFSET ${offset}
            </when>
            <otherwise>
                LIMIT 20 OFFSET 0
            </otherwise>
        </choose>
    </select>


    <insert id="insertQuestion" parameterType="QuestionEntity" useGeneratedKeys="true" keyProperty="seq">
        INSERT INTO QUESTIONNAIRES (`question`, `sub_question`, `ordered_by`) VALUES (#{question}, #{subQuestion}, #{orderedBy})
    </insert>

    <select id="getOneQuestion" parameterType="QuestionnairesEntity" resultType="QuestionnairesEntity">
        SELECT * FROM QUESTIONNAIRES
        WHERE is_deleted = 0
        AND seq = #{seq}
    </select>
    
    <update id="updateQuestion" parameterType="QuestionnairesEntity">
        UPDATE QUESTIONNAIRES
        SET `question` = #{question}
        <if test='subQuestion != null' >
            , `sub_question` = #{subQuestion}
        </if>
        <if test="isVisibled != null and isVisibled != 0">
            , `is_visibled` = #{isVisibled}
        </if>
        <if test="orderedBy != null and orderedBy != 0">
            , `ordered_by` = #{orderedBy}
        </if>
        WHERE `seq` = #{seq}
        AND is_deleted = 0
    </update>

    <update id="deleteQuestion" parameterType="QuestionnairesEntity">
        UPDATE QUESTIONNAIRES SET is_deleted = 1 WHERE seq = #{seq}
    </update>
</mapper>